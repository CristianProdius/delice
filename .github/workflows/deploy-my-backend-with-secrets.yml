name: Deploy My Backend with Secrets

on:
  push:
    branches:
      - main
    paths:
      - 'my/backend/**'
      - '.github/workflows/deploy-my-backend-with-secrets.yml'
  workflow_dispatch:  # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cristianprodius/delice-my-strapi

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./my/backend
          file: ./my/backend/Dockerfile
          target: production
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Create .env file
        run: |
          cat > .env << 'EOF'
          # Application
          NODE_ENV=production
          APP_KEYS=${{ secrets.STRAPI_APP_KEYS }}
          API_TOKEN_SALT=${{ secrets.STRAPI_API_TOKEN_SALT }}
          ADMIN_JWT_SECRET=${{ secrets.STRAPI_ADMIN_JWT_SECRET }}
          TRANSFER_TOKEN_SALT=${{ secrets.STRAPI_TRANSFER_TOKEN_SALT }}
          JWT_SECRET=${{ secrets.STRAPI_JWT_SECRET }}

          # Database
          DATABASE_CLIENT=postgres
          DATABASE_HOST=main_postgres
          DATABASE_PORT=5432
          DATABASE_NAME=${{ secrets.DB_NAME }}
          DATABASE_USERNAME=${{ secrets.DB_USERNAME }}
          DATABASE_PASSWORD=${{ secrets.DB_PASSWORD }}
          DATABASE_SSL=false

          # Server
          HOST=0.0.0.0
          PORT=1337
          URL=https://cms.delice.my
          PUBLIC_URL=https://cms.delice.my

          # Cloudflare R2
          AWS_ACCESS_KEY_ID=${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.R2_SECRET_ACCESS_KEY }}
          AWS_REGION=auto
          AWS_BUCKET=${{ secrets.R2_BUCKET }}
          AWS_ENDPOINT=${{ secrets.R2_ENDPOINT }}
          CDN_URL=${{ secrets.CDN_URL }}

          # Email
          SMTP_HOST=${{ secrets.SMTP_HOST }}
          SMTP_PORT=${{ secrets.SMTP_PORT }}
          SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
          EMAIL_DEFAULT_FROM=${{ secrets.EMAIL_DEFAULT_FROM }}
          EMAIL_DEFAULT_REPLY_TO=${{ secrets.EMAIL_DEFAULT_REPLY_TO }}
          EOF

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Create temp file for env
            cat > /tmp/.env.tmp << 'EOF'
            ${{ steps.create-env.outputs.env_content }}
            EOF

            # Move to project directory
            sudo mv /tmp/.env.tmp /srv/clients/delice/my/cms/.env
            sudo chown strapi:strapi /srv/clients/delice/my/cms/.env
            sudo chmod 600 /srv/clients/delice/my/cms/.env

            # Deploy new image
            cd /srv/clients/delice/my/cms
            sudo docker compose pull
            sudo docker compose up -d
            sudo docker system prune -f